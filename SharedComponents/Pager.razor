@using System
@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Components
<div>
    <button @onclick="(() => CurrentPage = MinPage)">First</button>
    @foreach (int pageNumber in DisplayPages)
    {
        <span @onclick="(() => CurrentPage = pageNumber)"
               class="@(CurrentPage == pageNumber ? "font-weight-bold" : "")">
            @pageNumber
        </span>
        @if (pageNumber != DisplayPages.Last())
        {
            <span>,</span>
        }
    }
    <button @onclick="(() => CurrentPage = PagesCount)">Last</button>
</div>
<div>
    <input placeholder="Page size" type="number" @bind="@PageSize" min="1"/>
</div>

@code {
    private const int MinPage = 1;
    private const int DisplayPagesNumber = 10;

    [Parameter]
    public int Count { get; set; }

    private int _pageSize;

    [Parameter]
    public int PageSize
    {
        get => _pageSize;
        set
        {
            if (value == _pageSize) return;
            _pageSize = value;
            OnPageSizeChange.InvokeAsync(value);

            CurrentPage = MinPage;
        }
    }

    private int _currentPage = MinPage;

    [Parameter]
    public int CurrentPage
    {
        get => _currentPage;
        set
        {
            if (value == _currentPage) return;
            _currentPage = value;
            OnPageChange.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<int> OnPageChange { get; set; }

    [Parameter]
    public EventCallback<int> OnPageSizeChange { get; set; }

    public int PagesCount => (int) Math.Ceiling((double) Count / PageSize);

    private IEnumerable<int> DisplayPages => Enumerable.Range(
        Math.Max(MinPage, CurrentPage - DisplayPagesNumber),
        Math.Min(PagesCount, CurrentPage + DisplayPagesNumber));

}